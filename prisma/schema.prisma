generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Department {
  id        Int        @id @default(autoincrement())
  index     String     @unique
  name      String
  category  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  employees Employee[]
}

model Employee {
  id           Int         @id @default(autoincrement())
  recordNo     String      @unique
  name         String      @unique
  category     String
  departmentId Int?
  rate         Float?      @default(0)
  type         String?
  scheduleId   Int?
  gsisgs       Float?      @default(0)
  ec           Float?      @default(0)
  gsisps       Float?      @default(0)
  phic         Float?      @default(0)
  hdmfgs       Float?      @default(0)
  hdmfps       Float?      @default(0)
  wtax         Float?      @default(0)
  sss          Float?      @default(0)
  mplhdmf      Float?      @default(0)
  gfal         Float?      @default(0)
  landbank     Float?      @default(0)
  cb           Float?      @default(0)
  eml          Float?      @default(0)
  mplgsis      Float?      @default(0)
  tagum        Float?      @default(0)
  ucpb         Float?      @default(0)
  mpllite      Float?      @default(0)
  sb           Float?      @default(0)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  department   Department? @relation(fields: [departmentId], references: [id])
  schedule     Schedule?   @relation(fields: [scheduleId], references: [id])
}

model Report {
  id        Int       @id @default(autoincrement())
  index     String    @unique
  recordNo  String
  name      String
  timestamp DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Events {
  id        Int       @id @default(autoincrement())
  index     String    @unique
  name      String
  type      String
  startDate DateTime
  endDate   DateTime
  applied   Boolean   @default(true)
  rule      Float     @default(1)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Settings {
  id           Int       @id @default(autoincrement())
  syncHolidays String
  gracePeriod  Int       @default(10)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
}

model Schedule {
  id                  Int        @id @default(autoincrement())
  name                String     @unique
  option              String
  straightTimeRegular Boolean?
  daysIncluded        String
  readOnly            Boolean    @default(false)
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  employees           Employee[]
}
